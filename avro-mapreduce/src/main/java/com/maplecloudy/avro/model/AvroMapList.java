/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.maplecloudy.avro.model;

import java.util.TreeMap;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroMapList extends org.apache.avro.specific.SpecificRecordBase
    implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser()
      .parse("{\"type\":\"record\",\"name\":\"AvroMapList\",\"namespace\":\"com.maplecloudy.avor.model\",\"fields\":[{\"name\":\"fields\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":[\"string\",\"int\",\"long\",\"bytes\",\"float\",\"double\",\"boolean\"],\"java-class\":\"java.util.List\"}}}]}");
  @Deprecated
  public java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Object>> fields;
  
  /**
   * Default constructor.
   */
  public AvroMapList() {}
  
  /**
   * All-args constructor.
   */
  public AvroMapList(
      java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Object>> map) {
    this.fields = fields;
  }
  
  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }
  
  // Used by DatumWriter. Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return fields;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  
  // Used by DatumReader. Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        fields = (java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Object>>) value$;
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  
  /**
   * Gets the value of the 'fields' field.
   */
  public java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Object>> getfields() {
    return fields;
  }
  
  /**
   * Sets the value of the 'fields' field.
   * 
   * @param value
   *          the value to set.
   */
  public void setfields(
      java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Object>> value) {
    this.fields = value;
  }
  
  /** Creates a new AvroMapList RecordBuilder */
  public static com.maplecloudy.avro.model.AvroMapList.Builder newBuilder() {
    return new com.maplecloudy.avro.model.AvroMapList.Builder();
  }
  
  /** Creates a new AvroMapList RecordBuilder by copying an existing Builder */
  public static com.maplecloudy.avro.model.AvroMapList.Builder newBuilder(
      com.maplecloudy.avro.model.AvroMapList.Builder other) {
    return new com.maplecloudy.avro.model.AvroMapList.Builder(other);
  }
  
  /**
   * Creates a new AvroMapList RecordBuilder by copying an existing AvroMapList
   * instance
   */
  public static com.maplecloudy.avro.model.AvroMapList.Builder newBuilder(
      com.maplecloudy.avro.model.AvroMapList other) {
    return new com.maplecloudy.avro.model.AvroMapList.Builder(other);
  }
  
  /**
   * RecordBuilder for AvroMapList instances.
   */
  public static class Builder extends
      org.apache.avro.specific.SpecificRecordBuilderBase<AvroMapList> implements
      org.apache.avro.data.RecordBuilder<AvroMapList> {
    
    private java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Object>> fields;
    
    /** Creates a new Builder */
    private Builder() {
      super(com.maplecloudy.avro.model.AvroMapList.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.maplecloudy.avro.model.AvroMapList.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing AvroMapList instance */
    private Builder(com.maplecloudy.avro.model.AvroMapList other) {
      super(com.maplecloudy.avro.model.AvroMapList.SCHEMA$);
      if (isValidValue(fields()[0], other.fields)) {
        this.fields = data().deepCopy(fields()[0].schema(), other.fields);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Gets the value of the 'fields' field */
    public java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Object>> getfields() {
      return fields;
    }
    
    /** Sets the value of the 'fields' field */
    public com.maplecloudy.avro.model.AvroMapList.Builder setfields(
        java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Object>> value) {
      validate(fields()[0], value);
      this.fields = value;
      fieldSetFlags()[0] = true;
      return this;
    }
    
    /** Checks whether the 'fields' field has been set */
    public boolean hasfields() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'fields' field */
    public com.maplecloudy.avro.model.AvroMapList.Builder clearfields() {
      fields = null;
      fieldSetFlags()[0] = false;
      return this;
    }
    
    @Override
    public AvroMapList build() {
      try {
        AvroMapList record = new AvroMapList();
        record.fields = fieldSetFlags()[0] ? this.fields
            : (java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Object>>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
  
  @Override
  public boolean equals(Object other) {
    if (other instanceof AvroMapList) {
      return fields.equals(((AvroMapList) other).fields);
    }
    return false;
  }
  
  @Override
  public int hashCode() {
    return fields.hashCode();
  }
  
  @Override
  public String toString() { // print fields sorted by key for better human
                             // readability
    return new TreeMap(fields).toString();
  }
  
}
